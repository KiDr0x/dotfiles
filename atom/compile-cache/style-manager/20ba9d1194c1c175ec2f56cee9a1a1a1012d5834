{"source":"atom-text-editor,atom-text-editor {\n  background-color: #fff;\n  color: #333333;\n}\natom-text-editor,atom-text-editor {\n  font-family: Consolas, \"Liberation Mono\", Courier, monospace;\n}\natom-text-editor .invisible-character,atom-text-editor .invisible-character,\natom-text-editor .indent-guide,atom-text-editor .indent-guide {\n  color: #dddddd;\n}\natom-text-editor .gutter,atom-text-editor .gutter {\n  background-color: #fff;\n  border-right: 1px #eee solid;\n}\natom-text-editor .gutter .line-number,atom-text-editor .gutter .line-number {\n  opacity: 1;\n}\natom-text-editor .gutter .line-number.folded,atom-text-editor .gutter .line-number.folded,\natom-text-editor .gutter .line-number:after,atom-text-editor .gutter .line-number:after,\natom-text-editor .fold-marker:after,atom-text-editor .fold-marker:after {\n  color: #93a1a1;\n}\natom-text-editor .cursor,atom-text-editor .cursor {\n  border-color: #333333;\n}\natom-text-editor .selection .region,atom-text-editor .selection .region {\n  background-color: #dddddd;\n  color: #93a1a1;\n}\natom-text-editor .line-number.cursor-line-no-selection,atom-text-editor .line-number.cursor-line-no-selection {\n  background-color: #dddddd;\n}\n.bracket-matcher .region {\n  background-color: #93a1a1;\n  opacity: 0.7;\n}\n.syntax--comment {\n  color: #999988 !important;\n  font-style: italic;\n}\n.syntax--punctuation {\n  color: #333333;\n  font-weight: bold;\n}\n.syntax--punctuation.syntax--separator {\n  font-weight: normal;\n}\n.syntax--entity {\n  color: #990000;\n  font-weight: bold;\n}\n.syntax--entity.syntax--class {\n  color: #445588;\n}\n.syntax--entity.syntax--inherited-class {\n  color: teal;\n  font-weight: normal;\n}\n.syntax--support.syntax--class {\n  color: teal;\n  font-weight: normal;\n}\n.syntax--keyword {\n  color: #333333;\n  font-weight: bold;\n}\n.syntax--storage.syntax--type {\n  color: #009926;\n}\n.syntax--constant {\n  color: #990073;\n}\n.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--boolean {\n  color: #333333;\n  font-weight: bold;\n}\n.syntax--variable {\n  color: teal;\n}\n.syntax--variable.syntax--parameter {\n  color: #333333;\n}\n.syntax--delimiter,\n.syntax--brace {\n  color: #333333;\n}\n.syntax--delimiter.syntax--period {\n  color: #333333;\n}\n.syntax--invalid.syntax--deprecated {\n  text-decoration: underline;\n  color: #dd1144;\n}\n.syntax--invalid.syntax--illegal {\n  color: #dd1144;\n}\n.syntax--string {\n  color: #dd1144;\n}\n.syntax--string .syntax--constant.syntax--character.syntax--escape {\n  color: #dd1144;\n}\n.syntax--string.syntax--regexp {\n  color: #009926;\n}\n.syntax--string.syntax--regexp .syntax--source.syntax--ruby.syntax--embedded,\n.syntax--string.syntax--regexp .syntax--string.syntax--regexp.syntax--arbitrary-repitition {\n  color: #009926;\n}\n","deprecationMessage":"Starting from Atom v1.13.0, the contents of `atom-text-editor` elements are no longer encapsulated within a shadow DOM boundary. This means you should stop using `:host` and `::shadow` pseudo-selectors, and prepend all your syntax selectors with `syntax--`. To prevent breakage with existing style sheets, Atom will automatically upgrade the following selectors:\n\n* `atom-text-editor,\n:host` => `atom-text-editor,atom-text-editor`\n\n* `atom-text-editor,\n:host` => `atom-text-editor,atom-text-editor`\n\n* `atom-text-editor .invisible-character,\n:host .invisible-character,\natom-text-editor .indent-guide,\n:host .indent-guide` => `atom-text-editor .invisible-character,atom-text-editor .invisible-character,\natom-text-editor .indent-guide,atom-text-editor .indent-guide`\n\n* `atom-text-editor .gutter,\n:host .gutter` => `atom-text-editor .gutter,atom-text-editor .gutter`\n\n* `atom-text-editor .gutter .line-number,\n:host .gutter .line-number` => `atom-text-editor .gutter .line-number,atom-text-editor .gutter .line-number`\n\n* `atom-text-editor .gutter .line-number.folded,\n:host .gutter .line-number.folded,\natom-text-editor .gutter .line-number:after,\n:host .gutter .line-number:after,\natom-text-editor .fold-marker:after,\n:host .fold-marker:after` => `atom-text-editor .gutter .line-number.folded,atom-text-editor .gutter .line-number.folded,\natom-text-editor .gutter .line-number:after,atom-text-editor .gutter .line-number:after,\natom-text-editor .fold-marker:after,atom-text-editor .fold-marker:after`\n\n* `atom-text-editor .cursor,\n:host .cursor` => `atom-text-editor .cursor,atom-text-editor .cursor`\n\n* `atom-text-editor .selection .region,\n:host .selection .region` => `atom-text-editor .selection .region,atom-text-editor .selection .region`\n\n* `atom-text-editor .line-number.cursor-line-no-selection,\n:host .line-number.cursor-line-no-selection` => `atom-text-editor .line-number.cursor-line-no-selection,atom-text-editor .line-number.cursor-line-no-selection`\n\n* `.comment` => `.syntax--comment`\n\n* `.punctuation` => `.syntax--punctuation`\n\n* `.punctuation.separator` => `.syntax--punctuation.syntax--separator`\n\n* `.entity` => `.syntax--entity`\n\n* `.entity.class` => `.syntax--entity.syntax--class`\n\n* `.entity.inherited-class` => `.syntax--entity.syntax--inherited-class`\n\n* `.support.class` => `.syntax--support.syntax--class`\n\n* `.keyword` => `.syntax--keyword`\n\n* `.storage.type` => `.syntax--storage.syntax--type`\n\n* `.constant` => `.syntax--constant`\n\n* `.constant.numeric,\n.constant.boolean` => `.syntax--constant.syntax--numeric,\n.syntax--constant.syntax--boolean`\n\n* `.variable` => `.syntax--variable`\n\n* `.variable.parameter` => `.syntax--variable.syntax--parameter`\n\n* `.delimiter,\n.brace` => `.syntax--delimiter,\n.syntax--brace`\n\n* `.delimiter.period` => `.syntax--delimiter.syntax--period`\n\n* `.invalid.deprecated` => `.syntax--invalid.syntax--deprecated`\n\n* `.invalid.illegal` => `.syntax--invalid.syntax--illegal`\n\n* `.string` => `.syntax--string`\n\n* `.string .constant.character.escape` => `.syntax--string .syntax--constant.syntax--character.syntax--escape`\n\n* `.string.regexp` => `.syntax--string.syntax--regexp`\n\n* `.string.regexp .source.ruby.embedded,\n.string.regexp .string.regexp.arbitrary-repitition` => `.syntax--string.syntax--regexp .syntax--source.syntax--ruby.syntax--embedded,\n.syntax--string.syntax--regexp .syntax--string.syntax--regexp.syntax--arbitrary-repitition`\n\nAutomatic translation of selectors will be removed in a few release cycles to minimize startup time. Please, make sure to upgrade the above selectors as soon as possible."}